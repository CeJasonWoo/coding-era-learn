// 二进制对算法优化很重要

// 我们在做很多”连续“的问题的时候都会用到二进制将他们离散简化
// 1.多重背包问题
// 2.树状数组
// 3.状态压缩DP
// ……………还有很多。。。究其根本还是那句话：化连续为离散。。
// 很多时候我们并不是为了解决一个问题而使用二进制，更多是时候是为了优化而使用它。
// 所以如果你想让你的程序更加能适应大数据的情况，那么学习学习二进制及其算法思想将会对你有很大帮助。
// 引用 http://www.cnblogs.com/yan-boy/archive/2012/11/29/2795294.html



//  算法---求二进制中1的个数
//  http://blog.csdn.net/hyqwmxsh/article/details/52493384

// 1常规写法 n &1
//  while (n >0)  
//     {  
//         if((n &1) ==1) // 当前位是1  
//             ++c ; // 计数器加1  
//         n >>=1 ; // 移位  
//     }  


// 2快速法 n &= (n – 1)
// 为什么n &= (n – 1)能清除最右边的1呢？因为从二进制的角度讲，n相当于在n - 1的最低位加上1。
// 举个例子，8（1000）= 7（0111）+ 1（0001），所以8 & 7 = （1000）&（0111）= 0（0000），
// 清除了8最右边的1（其实就是最高位的1，因为8的二进制中只有一个1）。
// 再比如7（0111）= 6（0110）+ 1（0001），所以7 & 6 = （0111）&（0110）= 6（0110），
// 清除了7的二进制表示中最右边的1（也就是最低位的1）。


// 3.查表法

// 二分法